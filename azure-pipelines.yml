# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# variables:
#   GLOBAL_SUB_ID: $(sub_id)

# trigger:
# - master
pr:
  branches:
    include:
      - 'feature*'

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      echo 'Hello world'
      zip -r test-code.zip app.py requirements.txt
      cp test-code.zip $(System.DefaultWorkingDirectory)/code.zip

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: $(subs_id)
    appType: 'webAppLinux'
    WebAppName: 'sid-test-app'
    packageForLinux: '$(System.DefaultWorkingDirectory)/code.zip'
    RuntimeStack: 'PYTHON|3.8'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo This is bash variable that I want to define to see how I can use here because devops defined vars need round brackets it seems
      TEST=hahahaha
      echo "Bash var: ${TEST}"
      echo 'Checking build status'
      if [ "$(Agent.JobStatus)" = "Succeeded"  ]; then
        echo "Build Succeeded"
      else
        echo "Build failed"
      fi
